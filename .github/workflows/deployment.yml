name: Deployment
run-name: Build and Deploy ${{ github.ref_name }} by ${{ github.actor }} at ${{ github.event_name }} event

on:
  push:
    branches:
      - main
      - cicd/deployment

permissions:
  id-token: write
  contents: read

env:
  ECR_IMAGE_LATEST: ${{ secrets.ECR_REGISTRY_URI }}:latest
  ECR_IMAGE_SHA: ${{ secrets.ECR_REGISTRY_URI }}:${{ github.sha }}
  TASK_DEFINITION: task-def.json

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: GHA-ECR-Build

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.ECR_IMAGE_LATEST }}, ${{ env.ECR_IMAGE_SHA }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: GHA-ECS-Deploy

      - name: Add task definition
        env:
          FILENAME: task-def.json
        run: |
          echo '${{ vars.TASK_DEFINITION }}' > ${{ env.TASK_DEFINITION }}

      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DEFINITION }}
          container-name: ${{ vars.ECS_CONTAINER_NAME }}
          image: ${{ env.ECR_IMAGE_SHA }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE_NAME }}
          cluster: ${{ vars.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
